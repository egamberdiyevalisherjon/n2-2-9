$tomonlar: (
  t: top,
  b: bottom,
  l: left,
  r: right,
  x: inline,
  y: block,
); // map

$colors: (
  primary: blue,
  secondary: gray,
  info: aqua,
  danger: red,
  warning: yellow,
  success: green,
  dark: black,
  light: white,
  indigo: indigo,
  orange: orange,
);

@each $color-key, $color in $colors {
  .text-#{$color-key} {
    color: $color;
  }

  .bg-#{$color-key} {
    background-color: $color;
  }

  .border-#{$color-key} {
    border-color: $color;
  }

  .shadow-#{$color-key} {
    box-shadow: 10px 10px $color;
  }

  .text-shadow-#{$color-key} {
    text-shadow: 10px 10px $color;
  }
}

@each $kalit-soz, $qiymat in $tomonlar {
  @for $tartib-raqam from 0 through 10 {
    .m#{$kalit-soz}-#{$tartib-raqam} {
      margin-#{$qiymat}: #{$tartib-raqam / 2}rem;
    }

    .p#{$kalit-soz}-#{$tartib-raqam} {
      padding-#{$qiymat}: #{$tartib-raqam / 2}rem;
    }
  }
}

// ranglar
// primary = blue,
// secondary = gray,
// info = aqua,
// danger = red,
// warning = yellow,
// success = green,
// dark = black,
// light = white,
// indigo = indigo,
// orange = orange

/* 
.text-primary { color: blue }
.bg-primary { background-color: blue }
.border-primary { border: 1px solid blue }
.shadow-primary { box-shadow: 10px 10px blue }
.text-shadow-primary { text-shadow: 10px 10px blue }
*/

// properties
// color, background-color, border-color, box-shadow, text-shadow

// function => rang
// ss { box-shadow: 0 0 10px rang, 0 0 20px lighten(rang, 10) }

@function ss($color) {
  @return 0 0 10px $color, 0 0 20px lighten($color, 10),
    0 0 30px darken($color, 20), 0 0 30px adjust-hue($color, 90);
}

.shadow {
  box-shadow: ss($color: blue);
}
